#version 450

// Texture sampler is an interface to allow accession to a specific pixel
uniform sampler2D texture_sampler;

layout(location=0) out vec4 output_color;

#define MAX_LIGHTS 30
uniform float strength_light[MAX_LIGHTS];
uniform int nb_lights;

in vec3 onormal;
in vec2 otex_coord;
in vec3 light_dir[MAX_LIGHTS];

void main() {
    output_color = vec4(0.f, 0.f, 0.f, 1.f);
    for (int i = 0; i < nb_lights; i++)
    {
        float len_to_light = length(light_dir[i]);
        float distance_factor = clamp(1 / len_to_light * strength_light[i], 0.f, 1.f);
        vec3 computed_color = dot(onormal, normalize(light_dir[i])) * texture(texture_sampler, otex_coord).rgb * distance_factor;
        output_color.rgb += clamp(computed_color, 0.f, 1.f);
        output_color = clamp(output_color, 0.f, 1.f);
    }
}
