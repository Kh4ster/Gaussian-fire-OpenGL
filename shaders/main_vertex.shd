#version 450

in vec3 position;
in vec3 normal;

// model_view_matrix: 3D world axis to 3D camera axis
// projection_matrix: 3D camera axis to 2D screen axis
uniform mat4 model_view_matrix;
uniform mat4 projection_matrix;

#define MAX_LIGHTS 30
uniform vec3 light_position[MAX_LIGHTS];
uniform int nb_lights;


out vec3 light_dir[MAX_LIGHTS];

out vec3 ocolor;
out vec3 onormal;

void main() {
    gl_Position = projection_matrix * model_view_matrix * vec4(position, 1.f);
    ocolor = vec3(1.0, 0.0, 0.0);
    onormal = normal;
    for (int i = 0; i < nb_lights; i++)
    {
        light_dir[i] = light_position[i] - position;
    }
}
